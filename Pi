#Imports
library(scales)
library(RColorBrewer)
library(ggplot2)


#Set the first 1000 digits of pi
pi1000<-"31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989"

#initialize column names
count0 <- count1<-count2 <- count3<-count4 <- count5 <- count6<-count7 <- count8<-count9 <- 
  per0<-per1 <- per2 <- per3 <- per4 <- per5 <- per6 <- per7 <- per8 <- per9 <-
  cum0<-cum1 <- cum2 <- cum3 <- cum4 <- cum5 <- cum6 <- cum7 <- cum8 <- cum9 <- 
  t<- Number<- val <- replicate(1000,0)

#make the data frames
pi.digits<-data.frame(count0,count1,count2 , count3,count4 , count5 , count6,count7 , count8,count9)
pi.per <- data.frame(per0,per1 , per2 , per3 , per4 , per5 , per6 , per7 , per8 , per9)
pi.cum <- data.frame(cum0,cum1 , cum2 , cum3 , cum4 , cum5 , cum6 , cum7 , cum8 , cum9)
df.area<-data.frame(t,Number,val)

pi.cum$cum3[1] <- 1 #set cumlative first value

#remove empty variables
rm(count0,count1,count2 , count3,count4 , count5 , count6,count7 , count8,count9,
   per0,per1 , per2 , per3 , per4 , per5 , per6 , per7 , per8 , per9, 
   cum0,cum1 , cum2 , cum3 , cum4 , cum5 , cum6 , cum7 , cum8 , cum9, t, val, digit)


#initialize hold
hold<-0


#seperates the digits of pie 
for (numpi in 1:1000){
  hold<-substr(pi1000, numpi, numpi)
  column<-as.integer(hold)+1
  pi.digits[numpi,(column)]<-1
  
}

#Calculates cumulative counts
for(numpi in 2:1000){
  for(column in 1:10){
    pi.cum[numpi,column]<-pi.cum[(numpi-1),column]+pi.digits[numpi,column]
  }}

#gets percentages
for(numpi in 1:1000){
  for(column in 1:10){
    pi.per[numpi,column]<-pi.cum[numpi,column]/numpi
  }}



#formats for the area plot
#whichDigit, what Number, What %
for(o in 1:nrow(pi.per)){ #runs for each row in pi.per
  
  for(i in 1:10){ #runs for the 10 digits
    rowWrite<-((o-1)*10+i)#Calculates what row to write to
    
    df.area[rowWrite,1]<-o #what digit of pie
    df.area[rowWrite,2]<-i-1 #what number (0,1,2...7,8,9)
    df.area[rowWrite,3]<- pi.per[o,i] #translates the percent
  }
}

df.area$Number<-as.factor(df.area$Number)



#plot the graphic
ggplot(data=df.area, aes(x=t, y=val, fill=Number))+
  geom_area(colour="black", size= .5, alpha=.6)+
  xlab(label="Number of Digits of Pi")+
  ylab(label="% of Characters")+
  ylim(0,1)+
  ggtitle("Visulaization of Digits in Pi")+
  scale_colour_brewer(palette = "Set1")+
  scale_y_continuous(labels = percent)
